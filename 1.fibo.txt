#include<stdio.h>
void main()
{
	int n;    //variable definition
	int n1 = 0, n2 = 1, n3 = 0;    //initialization
	printf("enter limit:");  //read user value
	scanf_s("%d", &n);
	printf("value of n1 and n2 is =\n%d\n%d\n", n1, n2);

	for (int i = 0; i <= n; i++)  //condition
	{
		n3 = n1 + n2;        //addition

		printf("%d\n", n3);
		n1 = n2;   
		n2 = n3;
	}
}


//recursive

#include<stdio.h>

void printFibonacci(int m){

static int m1=0,m2=1,m3;

if(m>0){

m3 = m1 + m2;

m1 = m2;

m2 = m3;

printf(“%d “,m3);

printFibonacci(m-1);

}

}

int main(){

int m;

printf(“Please enter your preferred number of elements here: “);

scanf(“%d”,&m);

printf(“The Fibonacci Series will be: “);

printf(“%d %d “,0,1);

printFibonacci(m-2); //We have used m-2 because we have 2 numbers already printed here

return 0;

}

time complexity iterative=O(n)
                recursive=O(2^n)

space 
 iterative-O(N)
recursive-O(1) or const